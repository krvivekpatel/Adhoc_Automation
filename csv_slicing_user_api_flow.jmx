<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="CSV-Based User API Flow" enabled="true">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.serialize_threadgroups">false</stringProp>
    </TestPlan>
    <hashTree>

      <!-- Setup Thread Group -->
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="Setup Thread Group" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
      </SetupThreadGroup>
      <hashTree>
        <!-- JDBC Connection -->
        <ConfigTestElement guiclass="TestBeanGUI" testclass="ConfigTestElement" testname="JDBC Connection Configuration" enabled="true">
          <stringProp name="dataSource">mydb</stringProp>
          <stringProp name="dbUrl">jdbc:mysql://localhost:3306/testdb</stringProp>
          <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
          <stringProp name="username">root</stringProp>
          <stringProp name="password">password</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <!-- JDBC Request -->
        <JDBCRequest guiclass="TestBeanGUI" testclass="JDBCRequest" testname="Get Users from DB" enabled="true">
          <stringProp name="dataSource">mydb</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT user_id, user_name FROM users;</stringProp>
          <stringProp name="variableNames">user_id,user_name</stringProp>
          <stringProp name="resultVariable">sqlResult</stringProp>
        </JDBCRequest>
        <hashTree>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Write CSV from SQL Result" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="script">
def rowCount = Integer.parseInt(vars.get("sqlResult_rowCount"))
def filePath = "user_data.csv"
def file = new File(filePath)
file.text = "user_id,user_name\n"
for (int i = 1; i &lt;= rowCount; i++) {
    def uid = vars.get("sqlResult_user_id_" + i)
    def uname = vars.get("sqlResult_user_name_" + i)
    file.append("${uid},${uname}\n")
}
props.put("userCSV", filePath)
props.put("userCount", rowCount.toString())
            </stringProp>
          </JSR223PostProcessor>
        </hashTree>
      </hashTree>

      <!-- Main Thread Group -->
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Main Thread Group" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <stringProp name="LoopController.loops">-1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
      </ThreadGroup>
      <hashTree>

        <!-- Slice CSV in memory per thread -->
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Slice CSV Per Thread" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="script">
def threadIndex = ctx.getThreadNum()
def totalThreads = ctx.getThreadGroup().getNumThreads()
def totalRows = props.get("userCount") as int
def perThread = totalRows.intdiv(totalThreads)
def remainder = totalRows % totalThreads
def start = threadIndex * perThread + Math.min(threadIndex, remainder)
def end = start + perThread - 1
if (threadIndex &lt; remainder) end += 1
def fullFile = new File(props.get("userCSV"))
def allLines = fullFile.readLines()
def outFile = new File("user_thread_${threadIndex}.csv")
outFile.text = allLines[0] + "\n"
for (int i = start + 1; i &lt;= end &amp;&amp; i &lt; allLines.size(); i++) {
    outFile.append(allLines[i] + "\n")
}
vars.put("userCSVPath", outFile.absolutePath)
          </stringProp>
        </JSR223Sampler>
        <hashTree/>

        <!-- CSV Data Set Config -->
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Read Per-Thread CSV" enabled="true">
          <stringProp name="filename">${userCSVPath}</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">user_id,user_name</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="shareMode">shareMode.thread</stringProp>
        </CSVDataSet>
        <hashTree/>

        <!-- API Request -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API 1 - Submit" enabled="true">
          <stringProp name="HTTPSampler.domain">api.example.com</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.postBodyRaw">true</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <stringProp name="Argument.value">{"userId":"${user_id}","userName":"${user_name}"}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>